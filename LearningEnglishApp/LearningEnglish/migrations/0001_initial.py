# Generated by Django 4.2.7 on 2023-11-23 07:28

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'category',
                'ordering': ['created_date'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('image', models.ImageField(default=None, upload_to='courses/%Y/%m')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'course',
                'ordering': ['created_date'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('index', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('fk_courses', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='LearningEnglish.course')),
            ],
            options={
                'db_table': 'lesson',
                'ordering': ['created_date'],
                'unique_together': {('name', 'fk_courses')},
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True)),
                ('ft_answer', models.CharField(max_length=255, null=True)),
                ('sd_answer', models.CharField(max_length=255, null=True)),
                ('td_answer', models.CharField(max_length=255, null=True)),
                ('fh_answer', models.CharField(max_length=255, null=True)),
                ('correct_answer', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'question',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'tag',
                'ordering': ['created_date'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(upload_to='uploads/%Y/%m')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('means', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('spelling', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('sound', models.FileField(blank=True, default=None, null=True, upload_to='words_sound/%Y/%m')),
                ('example', models.TextField(blank=True, null=True)),
                ('fk_question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='words', to='LearningEnglish.question')),
            ],
            options={
                'db_table': 'word',
            },
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('paragraph', models.TextField(blank=True, null=True)),
                ('fk_question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='readings', to='LearningEnglish.question')),
            ],
            options={
                'db_table': 'reading',
            },
        ),
        migrations.CreateModel(
            name='Listen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sound', models.FileField(blank=True, default=None, null=True, upload_to='listening_file/%Y/%m')),
                ('fk_question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listens', to='LearningEnglish.question')),
            ],
            options={
                'db_table': 'listen',
            },
        ),
        migrations.CreateModel(
            name='Grammar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('recipe', models.CharField(blank=True, max_length=255, null=True)),
                ('example', models.TextField(blank=True, null=True)),
                ('fk_question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grammars', to='LearningEnglish.question')),
            ],
            options={
                'db_table': 'grammar',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='tag',
            field=models.ManyToManyField(blank=True, null=True, related_name='tags', to='LearningEnglish.tag'),
        ),
        migrations.CreateModel(
            name='Lesson_Category_WLRG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_WLRG', models.IntegerField()),
                ('fk_Category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_category_wlrg', to='LearningEnglish.category')),
                ('fk_Lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_category_wlrg', to='LearningEnglish.lesson')),
            ],
            options={
                'db_table': 'lesson_category_wlrg',
                'unique_together': {('id_WLRG', 'fk_Lesson', 'fk_Category')},
            },
        ),
    ]
